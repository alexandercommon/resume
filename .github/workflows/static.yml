# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install liquidpy
      - name: Build file
        run: |
          pytest
          python3 - << EOF
          import json
          import os
          from liquid import Liquid

          # Check if the JSON data file exists
          if not os.path.isfile('data.json'):
            print('Error: data file not found')
            exit()

          # Check if the Liquid template file exists
          if not os.path.isfile('template.html'):
            print('Error: template file not found')
            exit()

          # Load the JSON data from a file
          with open('data.json') as f:
            data = json.load(f)

          # Load the Liquid template from a file
          template = Liquid('template.html')

          # Render the template with the JSON data
          new_site = template.render(data)

          # Write the rendered output to an HTML file
          with open('index.html', 'w') as f:
            f.write(new_site)

          EOF
  
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './index.html'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
